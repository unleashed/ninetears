this_player() ES EL CAUSANTE DE LA FUNCION EN LA QUE ESTES,
NO NECESARIAMENTE EL QUE LA DEBERIA GENERAR NORMALMENTE, POR EJEMPLO
CUANDO DESCUBREN A ALGUIEN, SI LO DESCUBRES TU -NO EL MISMO-, TU
ERES this_player(). LO MISMO OCURRE CON EL set_in_use() DE UNA
ARMA, SI LO USAS PARA MOSTRAR UN MENSAJE AL PONERTELA O QUITARTELA,
AL MATAR A ALGUIEN QUE LA LLEVE EMPUNYADA SI USAS this_player()
EL MENSAJE LO VERA EL QUE MATA!!

bug del espejismo:

AHORA calc_extra_look() PUEDE RECIBIR UN PARAMETRO, EL OBJETO A PASAR
A extra_look() (tb opcional, por lo que parece, ya que no es necesario
pasarle un objeto, supongo q sera siempre nulo si no se pasa). ASI,
COMO EN EL HECHIZO ESPEJISMO, EL extra_look() NO PODIA SABER A QUIEN
PREGUNTAR LAS IMGS, AHORA LO PUEDE SABER, Y SE SOLUCIONA EL BUG.

SHADOWS:

LA SHADOW DE ESCONDERSE USA UN CALL_OUT PARA DESTRUIRSE COMO MUCHAS
OTRAS, LO QUE HACE QUE AUNQUE TE HAYAN DESCUBIERTO, UN QUERY_HIDDEN
SIGUIENTE ANTES DE DESTRUIRSE DEVUELVA TRUE. SOLUCIONADO CON VARIABLE
INTERNA.

LOGS:

Siempre que caske algo, log/root.log y log/runtime_debug.log son a donde
ir. Si no, entrar con un inmortal y pasar por la "zona" y objetos
afectados, seguramente veremos que falla. Y si no, buscar a pelo los
errores :)

SALIDAS NO PERMITIDAS:

Cuando se devuelve 0 al usar una funcion para una salida (o algo similar),
usar notify_fail o saldra un Ein? por ahi!

TELLS NO REALES Y SIMILARES:

Cosas como tell_object(TP, "Npc te dice: las las") seran siempre visibles
para el player, aun cuando este SORDO!!!! Por ello mejor usar
comprobaciones de que este sordo o directamente un do_command("tell "+
TP->query_short() + " lokesea").

HANDLERS:

Mirar el usado en /room/castillo_drakull/handlers

THAC0 Y AC:

El THAC0 y la AC, cuanto menores son MEJORES. query_total_ac() da la
ac del cuerpo + bonos sumada con la ac del equipo puesto. El limite
esta en -100.

Me parece que tal como esta ahora no se tiene en cuenta el THAC0 para
bonificar el danyo, solo determina si se da o no.

ARMAS:

Todo el rollo de add_attack y los tipos de danyo posibles necesita
profunda revision (y mejora?). write_message() de las armas
no pasa como argumento si se ha dado o no, pese a que si el danyo
es 0 se supone que no (podriamos hacer asi la diferencia entre
esquiva el golpe y golpea pero no recibe danyo).

Si tienes objetos en directorios de inmortales no se podran coger por
mortales!

COMANDOS:

(obsoleto)
El bash detiene el slice? si detiene hechizos y parece que si
detiene la carga actual (basada en spell). Los comandos basados
en el codigo de hechizos deberian dejar de estarlo, pues no es
normal que "Te estremeces y pierdes la concentracion!" si no es
realmente un hechizo. Asi se evitarian cosas como cargar y
formular plegaria a la vez, que te den mucho y que salga por
duplicado el "estremeces". Ademas, se deberia mirar lo de
hacer comandos/atacar mientras se formula, y al reves.

HECHIZOS:

Muchos hechizos de MG, algunos de clerigo, y muy pocos de mago
dan errores. Hay que tener cuidado con morir y que la shadow de
un hechizo no se quite.

Ya me acordare de poner algo mas!

LINKS SIMBOLICOS:

NO FUNCIONAN, EL MUD NECESITA LOS FICHEROS REALES.

RANGOS DE INMORTALES:

DIOS
SEMIDIOS
ALQUIMISTA
THANE
PATRON
CREADOR

Aun no esta muy definido que es un LORD (parece entre Semidios y Thane).
Los titulos necesitan modificarse.

PERMISOS:

De entrada, casi todo esta cerrado para los creadores.
Hay que cambiar los comandos/hechizos de forma que se haga un
dominio para ellos, asi no tendremos que dar acceso a /std ni
siquiera para leer.
