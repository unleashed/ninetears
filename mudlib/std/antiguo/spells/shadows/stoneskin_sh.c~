#include <spells.h>
object my_player;
int pieles;

void setup_shadow(object ob,int i)
{
  int j;
  j=random(5)+10;
  shadow(ob,j);
  my_player=ob;
  pieles=i;
  my_player->add_extra_look("/std/spells/escuelas/alteracion/piel_piedra");
}

void destruct_stoneskin_shadow()
{
  my_player->RTP("stoneskin_on");
  tell_object(my_player,"Tu piel vuelve a ser normal.\n");
  tell_room(ENV(my_player),"La piel de "+my_player->QCN+" vuelve a ser normal.\n",my_player);
  my_player->remove_extra_look("/std/spells/escuelas/alteracion/piel_piedra");
  destruct(TO);
}

int check_duration()
{
  return !(my_player->QP("stoneskin_on") || !pieles);
}

int query_stoneskin_spell() { return 1;}

int spell_damage(int damage,string type,string sphere,int salvation,object caster)
{
  if (check_duration() || pieles<=0) call_out("destruct_stoneskin_shadow",0,0);
//Arreglos aki , por Dimmak
  my_player->adjust_hp(damage,caster);
    return damage;
}

//int adjust_hp(int amount,object hitter)
int weapon_damage(int amount,object hitter,object arma)
{
  if (amount>0 || !hitter) return my_player->weapon_damage(amount,hitter,arma);
  tell_object(hitter,"Quitas una piel de piedra a "+my_player->QCN+".\n");
  tell_object(my_player,hitter->QCN+" te quita una piel de piedra.\n");
  tell_room(ENV(my_player),hitter->QCN+" le quita a "+TO->QCN+" una piel de piedra.\n",({hitter,my_player}));
  pieles--;
  if (check_duration() && pieles<=0) call_out("destruct_stoneskin_shadow",0,0);
  return my_player->weapon_damage(0,hitter,arma);
}

void dispell_me()
{
  call_out("destruct_stoneskin_shadow",0,0);
}

void dispel_stoneskin()
{
  dispell_me();
}
