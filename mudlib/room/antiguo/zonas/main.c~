inherit "/std/room.c";

object board;

int i,n;
int x;
void reset() {
   object *all;
  if(!board) {
    board = clone_object("obj/misc/board");
    board->set_datafile("zonasboard");
    board->move(this_object());
   }
   n = reclaim_objects();
   for(i = 0; i < sizeof(all=children("/global/lord.c")); i++)
   {
      if(all[i])
      tell_object(all[i],"[Objects reclaimed: "+ n +" ]\n");
   }
   //::reset();
}





void setup() { 
set_short("%^BOLD%^RED%^AREA DE TEST: %^WHITE%^NUEVAS ZONAS%^RESET%^.\n");

  set_long("%^BOLD%^RED%^AREA DE TEST: %^WHITE%^NUEVAS ZONAS%^RESET%^.\n\n"
	"     A partir de aqui te adentras en la zona de pruebas de areas,\n"+
	"las zonas aqui presentes no estan probadas al 100%, por lo que puede\n"+
	"haber fallos de mapeado, rooms que fallen salidas, npcs que te \n"+
	"exploten en 1/2 turno etcetera etcetera, todo ello esta en un estado\n"+
	"beta, %^BOLD%^GREEN%^Es MUY importante %^CYAN%^NOTIFICAR%^RED%^_TODOS_%^RESET%^ los bugs en este tablon,\n"+
	"puesto expresamente para ello, con el fin de subsanarlos a la maxima rapidez posible.\n\n");

   set_light(50);
   add_exit("fuera","/room/camino_avalon/camino00","door");
   add_exit("valle","/w/jerkat/valle_dragon/room/valle_01.c","door");
}

