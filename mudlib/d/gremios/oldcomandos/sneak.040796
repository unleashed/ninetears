/**** Original code by Unknown ****/
/**** First mod for new FR by Baldrick ****/
/**** Modified by Ilmryn to be realistic ****/

#include "tweaks.h"
#define SNEAK_SKILL 20
#define COST SNEAK_COST

int sneak(string str, object mee)
{
  int i;
  object me;
  mixed *dest_dir;

  me = mee ? mee : this_player();
  
  str = me->expand_nickname(str);

  if (!str)  
  {
    notify_fail("Syntax: sneak <dir>\n");
    return 0;
  }

  if ((int)me->query_gp() < COST) 
  {
    notify_fail("Not enough guild points to sneak.\n");
    return 0;
  }

  dest_dir = (mixed *)environment(me)->query_dest_dir();
  if (!pointerp(dest_dir)) 
  {
    notify_fail("Please contact someone at once.  This room is WRONG!\n");
    return 0;
  }

  if ((i = member_array(str, dest_dir)) == -1 || i%2) 
  {
    notify_fail("Helps if you sneak in a direction that exists.\n");
    return 0;
  }
  me->adjust_gp(-COST);

  notify_fail("You failed to sneak "+dest_dir[i]+".\n");

  if ((int)me->query_level() > random(SNEAK_SKILL))
  {
    if (me->query_hide_shadow())
      i = (int)environment(me)->do_exit_command(0, 
        ({ dest_dir[i], "none"}), me, me );
    else
      i = (int)environment(me)->do_exit_command(0,
        ({ dest_dir[i], "none"}) );
  }
  else
    i = (int)environment(me)->do_exit_command(0, dest_dir[i]);

  if (!i)
    return 0;

  tell_object(me, "You sneak "+str+".\n");
  return 1;
}

string help() 
{
  return 
    "Syntax: sneak <dir>\n\n"
    "Lets you sneak in a direction.  This means that you get no exit or "
    "enter messages.  This relies on the skill other.covert.stealth.  "
    "Bing!  It will not inform you of success or failure and costs "+COST+
    " guild points regardless of if you succeed or not.\n\n"
    "Example : \n"
    "> sneak west\n"
    "Ok, you sneak west\n"
    "[Description of random room eaten by the hairy room descrtipion eater]\n"
    "\nSee also\n"
    "  hide.\n";
}
