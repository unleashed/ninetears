void add_action(string, void|string, void|int);
void add_attribute(string, void|int|object, void|object);
void add_prot_attribute(string, void|int|object, void|object);
void add_verb(string);
void add_worth(int, void|object);
void add_xverb(string);
object *all_inventory(void|object|string);
mixed *allocate(int);
int atoi(string);
void break_point();
unknown call_other(object|string, string, ...);
void call_out(string, int, void|mixed);
mixed *call_out_info();
object caller();
string capitalize(string);
int cat(string, void|int, void|int);
int check_ref(mixed *|object, void|int);
int cindent(string);
string clear_bit(string, string);
object clone_object(string);
void combine_free_list();
int command(string, void|object);
object *contents(object|string);
int cp(string, string);
string create_wizard(string, void|string);
string creator(object);
string crypt(string, int|string);
string ctime(void|int);
void delete_attribute(string, void|object);
mixed deletea(string|mixed *, int, void|int);
string describe(mixed *, string, void|int);
void destruct(object, void|int);
void disable_commands();
void ed(void|string, void|int|string);
void enable_commands();
object environment(void|string|object);
object exec(object, object);
int exists(string);
string *explode(string, string);
int export_uid(object);
mixed extract(mixed *|string, int, void|int);
string file_name(object);
int file_size(string);
string *files(string);
mixed *filter_objects(mixed *, string, object|string, void|mixed);
int find_call_out(string);
object find_living(string);
object find_object(string);
object find_player(string);
object first_inventory(object|string);
string format(string, void|int);
string function_exists(string, object);
mixed *get_attribute(void|object|string, void|object);
string geteuid(object);
string getuid(object);
string *grab_file(string, void|int, void|int);
string implode(mixed *, string);
int in_editor(void|object);
int index(string|mixed *, mixed, void|int);
void input_to(string, void|int);
int interactive(object);
int intp(mixed);
int living(object);
void localcmd();
void log_file(string, string);
string lower_case(string);
void ls(string|int);
mixed *map_array(mixed *, string, object|string, void|mixed);
int member_array(mixed, mixed *);
int memused();
void mkdir(string);
void move_object(string|object, string|object);
object next_inventory(object);
void notify_fail(string);
string objective(void|object);
int objectp(mixed);
string pad(string|int, int, void|int);
int pointerp(mixed);
string possessive(void|object);
object present(string|object, void|object);
object previous_object();
void print(string, void|int);
string process_string(string);
string query_arg();
int query_attribute(string, void|object);
string query_host_name();
int query_idle(object);
string query_ip_name(void|object);
string query_ip_number(void|object);
string query_load_average();
object query_snoop(object);
string query_verb();
int random(int);
string read_file(string, int);
mixed *reallocate(mixed *, int);
int remote_command();
int remove_call_out(string);
void remove_interactive(object);
#void remove_living_name(string);
int remove_shadow(void|object);
int rename(string, string);
int restore_object(string);
int rm(string);
int rmdir(string);
int root(void|object);
string rusage();
void save_object(string);
void say(string, void|object);
int searcha(string|mixed *, mixed, void|int);
string set_bit(string, int);
int set_heart_beat(int);
int set_light(int);
void set_living_name(string);
int seteuid(string|int);
object shadow(object, int);
void shout(string);
void shutdown();
int sizeof(mixed *|int);
mixed *slice_array(mixed *, int, int);
void snoop(void|object);
int stringp(mixed);
int strlen(string);
string subjective(void|object);
void swap(object);
void tail(string);
void tell_object(object, string);
void tell_room(object|string, string);
int test_bit(string, int);
string this_arg(); 
object this_object();
object this_player();
string this_verb();
void throw(mixed);
int time();
int trace(int);
string traceprefix(string|int);
int transfer(object, object|string);
string typeof(mixed);
mixed *unique_array(mixed *, string, void|mixed);
object *users();
string version();
void wizlist(void|string);
void write(mixed);
int write_file(string, string);
