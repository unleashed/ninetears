/*****************************************************************************
*                                                                            *  
*               DOC file for the bow weapons (By Khelben).                   *
*  Sorry for me very bad English. Feel free of correct any gramatical error  * 
*                                                                            *
*****************************************************************************/

        Well, create a bow or a crossbow is very easy. We must do first 
the bow and after the ammo.Here there is a little example for the bow:

1   #include "path.h"
1   inherit "/obj/weapons/ranged/shoot.c";   

2   void setup()
3   {
4      set_ranged_weapon("heavy cross bow");
5      set_name("heavy cross bow");
6      set_short("Heavy cross Bow");
7      add_alias("bow");
8      add_alias("cross bow");
9      set_readymess("You take your crossbow into your hands and aim at"); 
10     set_firemess("Finishing your aim you shoot off a bolt at");
11  }

12  int query_weapon() { return 1; }



        The lines that need to be commented are:

   1._ We must inerith this file. It has the function that will let the bow
work as the "/obj/weapon" make work to normal weapons. And of course as
always the path.h file.


   2._ set_ranged_weapon("blah"), where blah is the bow type. The allowed 
typos of bows are:

                   "long bow"              ({ 5,3,50,"quiver","arrow",2 });
                   "bow"                   ({ 3,2,40,"quiver","arrow",2 });
                   "heavy cross bow"       ({ 3,1,40,"quiver","bolt",2 });
                   "cross bow"             ({ 2,1,30,"quiver","bolt",2 });
                   "light cross bow"       ({ 1,1,30,"quiver","bolt",2 });
                   "blow gun"              ({ 2,2,40,"pouch","needle",2 });
  
    And the meaning of the array is:     

                 0 - Range: Number of rooms since where you can shoot.
                 1 - Speed: Number of rounds that you need for shoot. 
                 2 - Base Accuracy: If is higher it will be easier shoot.
                 3 - Container type: Where you must put the arrows.
                 4 - Ammo type: Ammo type :)       
                 5 - Hands needed: Hands needed :)

   9._ set_readymess("blah"), where blah is the message given to the archer
while he is aiming the target. 

   10._ set_firemess("blah"), where blah is the message given to the archer
where he shoot at target. 

   


       And create the ammo also is easy. Again we'll see an example:

1   #include "path.h"
1   inherit "/obj/weapons/ranged/ammo.c" 
2 
3   void setup()
4   {
5      set_name("blue bolt");
6      set_short("Blue bolt");
7      set_long("A blue test bolt, hope it hit your ass\n\n");
8      add_alias("bolt");
9      set_proj_name("bolt")
10     set_main_plural("blue bolts");
11     add_plural("bolts");
12     set_weight(1);
13     set_weapon_damage( ({ 2, 4, 6 })); 
14   }
 

      1._ The file that we must inherit.

      8._ There are 3 type of projectiles: "bolt", "arrow" and "needle".
This function will set the type.

      13._ set_weapon_damage(({ 2, 4, 6 })) : DO NOT USE THIS WITHOUT 
RADIX OR TANIWHA APROVAL OR THEY'LL CUT YOUR BALLS (AND I'LL BE HAPPY).
The damage of our projectile will be: roll(2 , 4) + 6 ====> between 8 - 14 HP.




    And for create a throwing weapon is very similar to create a bow, but
now we must not create the ammo. In the set_ranged_weapon() funtion the
valid types are: 
                    "throwing hammer"
                    "throwing knife"



1   #include "path.h"
1   inherit "/obj/weapons/ranged";  

2   void setup()
3   {
4      set_ranged_weapon("throwing hammer");
5      set_name("throwing hammer");
6      set_short("Throwing hammer");
7      add_alias("hammer");
8      set_readymess("You take your hammer into your hands and aim at"); 
9      set_firemess("Finishing your aim you throw a hammer at");
10     set_weapon_damage( ({ 2, 4, 6 })); 
11  }
 

   3 August 1996: Added a change to thrown weapons. Now you can add 2 
properties to a player: add_property("throwing hammer", <number>)
or add_property("throwing knife", <number>). This number must be over 1, 
and while higher skiller will be the thrower (if you want see it look at
function check_accuracy() in throw.c).  
    Of course, when you add the property you must do the following:
        add_property("throwing knife", query_property("throwing knife")+1)

    AND ANOTHER THING....BEFORE to do this contact with me. I want look 
at the quest (of course must be a quest) for to be sure that is enough hard
(I prefer a thinking quest) for include this.

   




           If you have any doubt or any problem feel free of mail me.



                     Khelben, 20 July 1996.



**ADDITION by Cailet, 10/19/96

Customizable room tells for ready and fire.  Feel free, someone who knows 
what they're doing, to make this neater, just don't break it or I'll break
your kneecaps.

This standard setup() should now look like this.

*******************
#include "path.h"

inherit THROW;  

void setup()
{
   set_ranged_weapon("throwing knife");
   set_name("throwing dagger");
   set_short("throwing dagger");
   add_alias("dagger");
   set_main_plural("daggers");
   add_plural("throwing daggers");
   set_readymess("You grip your dagger loosely and aim at"); 
   set_firemess("You pray silently that your dagger will find its "
                "mark in the chest of");
   set_roomready("$shooter_name$ grasps a wicked looking dagger and "
                 "carefully aims.\n\n");
   set_roomfire("$shooter_name$ quickly hurls a dagger.\n\n");
}

int query_weapon() { return 1; }
********************

set_roomready() and set_roomfire() must have the $shooter_name$ in there, 
that's what the code will replace with our nasty little attacker's name.
Also do your formatting there.  Not necessary for $shooter_name$ to be at
the beginning of the message.

Don't ask me questions if you don't get it. :)  Mail Taniwha.
*cackle*


